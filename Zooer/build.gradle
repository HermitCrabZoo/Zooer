/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.1/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'
apply plugin: 'maven' 
//JDK1.8
sourceCompatibility = 1.10
targetCompatibility = 1.10
//版本号  
version = '1.0'  

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    // Can use Maven central
    //mavenCentral()
    // Or Maven local central
    //mavenLocal()
}
//由于有些子依赖可能在运行时用不到,true代表下载子依赖，false代表不下载子依赖
configurations.all{
	transitive=false
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:22.0'
    
    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    
    compile fileTree(dir:'lib',include:['*.jar'])
    
	compile group: 'cglib', name: 'cglib', version: '3.2.5'
    compile group: 'org.ow2.asm', name: 'asm', version: '5.2'
    compile group: 'com.google.zxing', name: 'core', version: '3.3.0'
    
    //javacv部分
	compile('org.bytedeco:javacv:1.4@jar'){//只下载主依赖jar
		transitive=true//下载子依赖
		//不添加以下子依赖到项目
		exclude module: 'javacpp'
		exclude module: 'opencv'
		exclude module: 'ffmpeg'
		exclude module: 'flycapture'
		exclude module: 'libdc1394'
		exclude module: 'libfreenect'
		exclude module: 'libfreenect2'
		exclude module: 'librealsense'
		exclude module: 'videoinput'
		exclude module: 'artoolkitplus'
		exclude module: 'flandmark'
	}
	compile group: 'org.bytedeco', name: 'javacpp', version: '1.4'
	compile group: 'org.bytedeco.javacpp-presets', name: 'ffmpeg', version: '3.4.1-1.4'
	compile group: 'org.bytedeco.javacpp-presets', name: 'opencv', version: '3.4.0-1.4'
	//compile group: 'org.bytedeco.javacpp-presets', name: 'ffmpeg-windows-x86_64', version: '3.2.1-1.3'
	//compile group: 'org.bytedeco.javacpp-presets', name: 'opencv-windows-x86_64', version: '3.2.0-1.3'
	
	compile group: 'org.apdplat', name: 'word', version: '1.3.1'
	compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
	
	//compile group: 'org.springframework', name: 'spring-beans', version: '4.3.12.RELEASE'
	//compile group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.3'

	//compile group: 'org.projectlombok', name: 'lombok', version: '1.16.18'
	

	//tess4j部分
	compile('net.sourceforge.tess4j:tess4j:3.4.6@jar'){//只下载主依赖jar
		transitive=true//下载子依赖
		//不添加以下子依赖到项目(需要下载的子依赖:jai-imageio-core-1.3.1,jna-4.1.0)
		exclude module: 'logback-classic'
		exclude module: 'pdfbox'
		exclude module: 'pdfbox-tools'
		exclude module: 'jbig2-imageio'
		exclude module: 'ghost4j'
		exclude module: 'jboss-vfs'
		exclude module: 'jcl-over-slf4j'
		exclude module: 'log4j-over-slf4j'
	}
	compile group: 'net.sourceforge.lept4j', name: 'lept4j', version: '1.6.3'
	compile group: 'com.github.jai-imageio', name: 'jai-imageio-core', version: '1.4.0'
	compile group: 'net.java.dev.jna', name: 'jna', version: '4.1.0'
	compile group: 'commons-io', name: 'commons-io', version: '2.6'
	compile group: 'org.slf4j', name: 'jul-to-slf4j', version: '1.7.25'
	
	//cpdetector部分
	//api 'net.sourceforge.cpdetector:cpdetector:1.0.7'
	//api 'net.sourceforge.jargs:jargs:1.0'
	api 'net.sourceforge.jchardet:jchardet:1.0'
	api 'antlr:antlr:2.7.7'
	
	
}
tasks.withType(JavaCompile) {  
    options.encoding = "UTF-8"
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation" //编译参数:未检查,过期API
    //options.compilerArgs += ['--add-modules', 'java.desktop']
}

jar {
    manifest {
        attributes('Implementation-Title': project.name,
                   'Implementation-Version': project.version)
    }
}

